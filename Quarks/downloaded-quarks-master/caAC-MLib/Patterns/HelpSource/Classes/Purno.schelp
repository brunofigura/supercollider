

TITLE:: Purno
summary:: Random Series selection principles with repetition check.
categories:: Streams-Patterns-Events>Patterns>List
related:: Classes/Prand, Classes/Pxrand, Classes/Pseq, Classes/Pindex, Classes/Pshuf



DESCRIPTION::
The name of this object refers to Pattern Urn. Random selection is applied to an input list until all elements are returned once. After that the process repeats itself according the repeat argument. Make sure that the input list elements are not identical because this can cause an infinite loop to occur.

image::seriesSelection.png#Random Series selections output list.::

link::http://villa-achterwerk.nl/kijk/purno-de-purno.html##Purno de Purno::






CLASSMETHODS::
METHOD:: new

argument:: list
Input list data. Make sure the list elements are not identical this can cause a loop!
argument:: repeat
The number of repeats of the selection process until an array is empty.

INSTANCEMETHODS::

private:: embedInStream
private:: storeArgs

EXAMPLES::
CODE::

// 2 amount of repeated series
Purno([1,2,3,4],2).asStream.nextN(10);

// 1 amount of repeated Chromatic series.
Purno((0,1..11),1).asStream.nextN(15);

// infinite amount of repeated series
Purno(["a","b","c","d","e"],1).asStream.nextN(15);

// Embedded with an floating-point uniform random number generator
Purno([1,2,Pwhite(0,1.0,1),4],2).asStream.nextN(10);

(
a = Pbind(
    \note, Purno((0,1..11), inf),
    \dur, Prand([0.2, 0.4, 0.8], inf),
    \amp, 0.1, \octave, 5,
).play;
)

// Series selection with generators!
Purno([Pwhite(0,1.0,1),Pwhite(20,30,1),Pwhite(200,300,1)],4).asStream.nextN(8)


::
