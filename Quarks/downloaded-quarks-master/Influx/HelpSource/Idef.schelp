TITLE:: Idef
summary:: a named Influx
categories:: Control
related:: Classes/Influx, Classes/, Classes/ISdef

DESCRIPTION::
a named variant of Influx, creation and lookup by name with
Idef(<name>), like OSCdef, Ndef, Tdef, etc. Other named influx variants are
IMdef and ISdef.

For detailed examples, see link::Classes/Influx::.

code::
x = Idef(\x, 4, 8);
x.dump;
::

CLASSMETHODS::

METHOD:: at
argument:: key
get Idef with name <key>.

METHOD:: new
create or lookup new Idef by name. If Idef exists, other args are ignored.
argument:: key
argument:: inNames
number or list of inNames
argument:: outNames
number or list of inNames
argument:: inValDict


METHOD:: all
all Idefs by name
private:: initClass


INSTANCEMETHODS::

METHOD:: key
get the key of this Idef
private:: prAdd, storeArgs

EXAMPLES::

code::
// all Influxdefs, little tests

// InfluxBase -> IBdef
a = IBdef(\a, 4); // other args ignored for now.
IBdef(\a) === a
a.postv;
a.set(\x, 0.5);
a.set(\y, 0.2);
a.set(\zzz, 0.5);
a.postv;
a.inValDict;

// InfluxMix -> IMdef
b = IMdef(\b, 3);
IMdef(\b, 2); // other args ignored for now.
IMdef(\b) === b
b.postv;
b.dump;
b.influence(\srcA, \x, 0.5).postv;
b.influence(\srcB, \y, 0).postv;
b.influence(\srcC, \x, -0.25, \y, 1, \z, 0.25).postv;


b = Idef(\a, 3, 8);
Idef(\a, 2); // other args ignored for now.
Idef(\a) === a;
Idef(\a) === b;
b.set(\x, 0.5);
b.postv;

d = ISdef(\a, 2);
ISdef(\a, 2); // other args ignored for now.
ISdef(\a) === a
ISdef(\a) === d
d.dump

a = IBdef(\b, 4);
a.key;
a.dump;
a.inValDict;
a.postv;
::